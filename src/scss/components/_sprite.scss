// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$back-check-name: 'back_check';
$back-check-x: 194px;
$back-check-y: 0px;
$back-check-offset-x: -194px;
$back-check-offset-y: 0px;
$back-check-width: 16px;
$back-check-height: 30px;
$back-check-total-width: 246px;
$back-check-total-height: 178px;
$back-check-image: 'sprite.png';
$back-check: (194px, 0px, -194px, 0px, 16px, 30px, 246px, 178px, '../img/sprite.png', 'back_check', );
$important-ico1-name: 'important_ico1';
$important-ico1-x: 0px;
$important-ico1-y: 97px;
$important-ico1-offset-x: 0px;
$important-ico1-offset-y: -97px;
$important-ico1-width: 81px;
$important-ico1-height: 81px;
$important-ico1-total-width: 246px;
$important-ico1-total-height: 178px;
$important-ico1-image: 'sprite.png';
$important-ico1: (0px, 97px, 0px, -97px, 81px, 81px, 246px, 178px, '../img/sprite.png', 'important_ico1', );
$important-ico2-name: 'important_ico2';
$important-ico2-x: 0px;
$important-ico2-y: 0px;
$important-ico2-offset-x: 0px;
$important-ico2-offset-y: 0px;
$important-ico2-width: 81px;
$important-ico2-height: 81px;
$important-ico2-total-width: 246px;
$important-ico2-total-height: 178px;
$important-ico2-image: 'sprite.png';
$important-ico2: (0px, 0px, 0px, 0px, 81px, 81px, 246px, 178px, '../img/sprite.png', 'important_ico2', );
$important-ico3-name: 'important_ico3';
$important-ico3-x: 97px;
$important-ico3-y: 0px;
$important-ico3-offset-x: -97px;
$important-ico3-offset-y: 0px;
$important-ico3-width: 81px;
$important-ico3-height: 81px;
$important-ico3-total-width: 246px;
$important-ico3-total-height: 178px;
$important-ico3-image: 'sprite.png';
$important-ico3: (97px, 0px, -97px, 0px, 81px, 81px, 246px, 178px, '../img/sprite.png', 'important_ico3', );
$soc-cirde-name: 'soc_cirde';
$soc-cirde-x: 138px;
$soc-cirde-y: 149px;
$soc-cirde-offset-x: -138px;
$soc-cirde-offset-y: -149px;
$soc-cirde-width: 21px;
$soc-cirde-height: 21px;
$soc-cirde-total-width: 246px;
$soc-cirde-total-height: 178px;
$soc-cirde-image: 'sprite.png';
$soc-cirde: (138px, 149px, -138px, -149px, 21px, 21px, 246px, 178px, '../img/sprite.png', 'soc_cirde', );
$soc-fb-name: 'soc_fb';
$soc-fb-x: 226px;
$soc-fb-y: 110px;
$soc-fb-offset-x: -226px;
$soc-fb-offset-y: -110px;
$soc-fb-width: 10px;
$soc-fb-height: 21px;
$soc-fb-total-width: 246px;
$soc-fb-total-height: 178px;
$soc-fb-image: 'sprite.png';
$soc-fb: (226px, 110px, -226px, -110px, 10px, 21px, 246px, 178px, '../img/sprite.png', 'soc_fb', );
$soc-feed-name: 'soc_feed';
$soc-feed-x: 226px;
$soc-feed-y: 37px;
$soc-feed-offset-x: -226px;
$soc-feed-offset-y: -37px;
$soc-feed-width: 20px;
$soc-feed-height: 21px;
$soc-feed-total-width: 246px;
$soc-feed-total-height: 178px;
$soc-feed-image: 'sprite.png';
$soc-feed: (226px, 37px, -226px, -37px, 20px, 21px, 246px, 178px, '../img/sprite.png', 'soc_feed', );
$soc-google-name: 'soc_google';
$soc-google-x: 226px;
$soc-google-y: 0px;
$soc-google-offset-x: -226px;
$soc-google-offset-y: 0px;
$soc-google-width: 20px;
$soc-google-height: 21px;
$soc-google-total-width: 246px;
$soc-google-total-height: 178px;
$soc-google-image: 'sprite.png';
$soc-google: (226px, 0px, -226px, 0px, 20px, 21px, 246px, 178px, '../img/sprite.png', 'soc_google', );
$soc-in-name: 'soc_in';
$soc-in-x: 226px;
$soc-in-y: 74px;
$soc-in-offset-x: -226px;
$soc-in-offset-y: -74px;
$soc-in-width: 19px;
$soc-in-height: 20px;
$soc-in-total-width: 246px;
$soc-in-total-height: 178px;
$soc-in-image: 'sprite.png';
$soc-in: (226px, 74px, -226px, -74px, 19px, 20px, 246px, 178px, '../img/sprite.png', 'soc_in', );
$soc-stumb-name: 'soc_stumb';
$soc-stumb-x: 149px;
$soc-stumb-y: 97px;
$soc-stumb-offset-x: -149px;
$soc-stumb-offset-y: -97px;
$soc-stumb-width: 27px;
$soc-stumb-height: 21px;
$soc-stumb-total-width: 246px;
$soc-stumb-total-height: 178px;
$soc-stumb-image: 'sprite.png';
$soc-stumb: (149px, 97px, -149px, -97px, 27px, 21px, 246px, 178px, '../img/sprite.png', 'soc_stumb', );
$soc-tw-name: 'soc_tw';
$soc-tw-x: 97px;
$soc-tw-y: 149px;
$soc-tw-offset-x: -97px;
$soc-tw-offset-y: -149px;
$soc-tw-width: 25px;
$soc-tw-height: 21px;
$soc-tw-total-width: 246px;
$soc-tw-total-height: 178px;
$soc-tw-image: 'sprite.png';
$soc-tw: (97px, 149px, -97px, -149px, 25px, 21px, 246px, 178px, '../img/sprite.png', 'soc_tw', );
$structure-check-name: 'structure_check';
$structure-check-x: 97px;
$structure-check-y: 97px;
$structure-check-offset-x: -97px;
$structure-check-offset-y: -97px;
$structure-check-width: 36px;
$structure-check-height: 36px;
$structure-check-total-width: 246px;
$structure-check-total-height: 178px;
$structure-check-image: 'sprite.png';
$structure-check: (97px, 97px, -97px, -97px, 36px, 36px, 246px, 178px, '../img/sprite.png', 'structure_check', );
$spritesheet-width: 246px;
$spritesheet-height: 178px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($back-check, $important-ico1, $important-ico2, $important-ico3, $soc-cirde, $soc-fb, $soc-feed, $soc-google, $soc-in, $soc-stumb, $soc-tw, $structure-check, );
$spritesheet: (246px, 178px, 'sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
